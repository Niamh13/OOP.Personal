/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package belowwaterappp;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * View GUI
 * @author niamh
 */
public class VeiwGUI extends javax.swing.JFrame {

    Connection myConn;
    private ArrayList <Log> logData;
    
    /**
     * Creates new form VeiwGUI
     */
    public VeiwGUI() {
        initComponents();
        typeLBL.setVisible(false);
        typeCBX.setVisible(false);
        dateLB.setVisible(false);
        soldLBL.setVisible(false);
        soldTF.setVisible(false);
        caughtLBL.setVisible(false);
        caughtTF.setVisible(false);
        addBTN.setVisible(false);
        dateLB.setVisible(false);
        dateTF.setVisible(false);
        searchBTN.setVisible(false);
        deleteBTN.setVisible(false);
        getConnection();
        logData = new ArrayList<>();
    }
    
    private void getConnection(){
        try{
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/fishdb", "root", "Endless13");
        } catch (SQLException ex) {
            System.out.println("Error Connecting:" + ex.getMessage());
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        titleLBL = new javax.swing.JLabel();
        coOrdLB = new javax.swing.JLabel();
        overTF = new javax.swing.JTextField();
        downTF = new javax.swing.JTextField();
        goBTN = new javax.swing.JButton();
        addFishBTN = new javax.swing.JButton();
        deleteFishBTN = new javax.swing.JButton();
        dateLB = new javax.swing.JLabel();
        dateTF = new javax.swing.JTextField();
        typeLBL = new javax.swing.JLabel();
        typeCBX = new javax.swing.JComboBox<>();
        caughtLBL = new javax.swing.JLabel();
        caughtTF = new javax.swing.JTextField();
        soldLBL = new javax.swing.JLabel();
        soldTF = new javax.swing.JTextField();
        addBTN = new javax.swing.JButton();
        returnBTN = new javax.swing.JButton();
        displayBTN = new javax.swing.JButton();
        searchFishBTN = new javax.swing.JButton();
        searchBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        bgLBL = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(840, 780));
        setSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(null);

        titleLBL.setFont(new java.awt.Font("Comic Sans MS", 0, 48)); // NOI18N
        titleLBL.setText("Go Fishing");
        getContentPane().add(titleLBL);
        titleLBL.setBounds(177, 0, 243, 63);

        coOrdLB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coOrdLB.setText("Co Ordinates (X,Y) : ");
        getContentPane().add(coOrdLB);
        coOrdLB.setBounds(6, 69, 130, 20);

        overTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overTFActionPerformed(evt);
            }
        });
        getContentPane().add(overTF);
        overTF.setBounds(6, 95, 45, 22);

        downTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downTFActionPerformed(evt);
            }
        });
        getContentPane().add(downTF);
        downTF.setBounds(57, 95, 48, 22);

        goBTN.setBackground(new java.awt.Color(153, 255, 204));
        goBTN.setToolTipText("");
        goBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBTNActionPerformed(evt);
            }
        });
        getContentPane().add(goBTN);
        goBTN.setBounds(111, 101, 20, 16);

        addFishBTN.setBackground(new java.awt.Color(102, 204, 255));
        addFishBTN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addFishBTN.setText("Add Fish Data");
        addFishBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFishBTNActionPerformed(evt);
            }
        });
        getContentPane().add(addFishBTN);
        addFishBTN.setBounds(0, 140, 130, 34);

        deleteFishBTN.setBackground(new java.awt.Color(102, 204, 255));
        deleteFishBTN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deleteFishBTN.setText("Delete Log");
        deleteFishBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFishBTNActionPerformed(evt);
            }
        });
        getContentPane().add(deleteFishBTN);
        deleteFishBTN.setBounds(140, 180, 110, 34);

        dateLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateLB.setText("Date:");
        dateLB.setToolTipText("");
        getContentPane().add(dateLB);
        dateLB.setBounds(10, 240, 60, 16);

        dateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTFActionPerformed(evt);
            }
        });
        getContentPane().add(dateTF);
        dateTF.setBounds(80, 240, 71, 22);

        typeLBL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        typeLBL.setText("Species: ");
        typeLBL.setToolTipText("");
        getContentPane().add(typeLBL);
        typeLBL.setBounds(10, 270, 60, 16);

        typeCBX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "Mackerel", "Pollock", "Codling", "Whiting" }));
        typeCBX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeCBXActionPerformed(evt);
            }
        });
        getContentPane().add(typeCBX);
        typeCBX.setBounds(80, 270, 82, 22);

        caughtLBL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        caughtLBL.setText("Caught:");
        getContentPane().add(caughtLBL);
        caughtLBL.setBounds(10, 300, 60, 16);

        caughtTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caughtTFActionPerformed(evt);
            }
        });
        getContentPane().add(caughtTF);
        caughtTF.setBounds(80, 300, 71, 22);

        soldLBL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        soldLBL.setText("Sold:");
        getContentPane().add(soldLBL);
        soldLBL.setBounds(20, 330, 50, 16);

        soldTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldTFActionPerformed(evt);
            }
        });
        getContentPane().add(soldTF);
        soldTF.setBounds(80, 330, 71, 22);

        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });
        getContentPane().add(addBTN);
        addBTN.setBounds(50, 360, 60, 23);

        returnBTN.setText("Return to Home");
        returnBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBTNActionPerformed(evt);
            }
        });
        getContentPane().add(returnBTN);
        returnBTN.setBounds(655, 10, 160, 40);

        displayBTN.setBackground(new java.awt.Color(102, 204, 255));
        displayBTN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        displayBTN.setText("Display Log");
        displayBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBTNActionPerformed(evt);
            }
        });
        getContentPane().add(displayBTN);
        displayBTN.setBounds(140, 140, 110, 34);

        searchFishBTN.setBackground(new java.awt.Color(102, 204, 255));
        searchFishBTN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchFishBTN.setText("Search Log");
        searchFishBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFishBTNActionPerformed(evt);
            }
        });
        getContentPane().add(searchFishBTN);
        searchFishBTN.setBounds(0, 180, 130, 34);

        searchBTN.setText("Search");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });
        getContentPane().add(searchBTN);
        searchBTN.setBounds(60, 270, 90, 23);

        deleteBTN.setText("Delete");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBTN);
        deleteBTN.setBounds(60, 300, 80, 23);

        bgLBL.setIcon(new javax.swing.ImageIcon("C:\\Users\\niamh\\Downloads\\fishingBG.png")); // NOI18N
        getContentPane().add(bgLBL);
        bgLBL.setBounds(0, 0, 860, 730);

        pack();
    }// </editor-fold>                        

    private void overTFActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void downTFActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void goBTNActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        int mSold, mCaught, wSold, wCaught, cSold, cCaught, pSold, pCaught;
        
        CoOrdinates myC = new CoOrdinates();
        myC.setOver(Integer.parseInt(overTF.getText()));
        myC.setDown(Integer.parseInt(downTF.getText()));
        
        
        try {
            Statement myStatement = myConn.createStatement();
            ResultSet myRs = myStatement.executeQuery("SELECT SUM(Pwaste) AS caught, SUM(totals) AS sold FROM fishdb.data_table WHERE species = 'Mackerel' GROUP BY species");
            myRs.next();
            mSold = myRs.getInt("sold");
            mCaught = myRs.getInt("caught");
            myC.setMSold(mSold);
            myC.setMCaught(mCaught);
            ResultSet myR = myStatement.executeQuery("SELECT SUM(Pwaste) AS caught, SUM(totals) AS sold FROM fishdb.data_table WHERE species = 'Codling' GROUP BY species");
            myR.next();
            cSold = myR.getInt("sold");
            cCaught = myR.getInt("caught");
            myC.setCSold(cSold);
            myC.setCCaught(cCaught);
            ResultSet myRe = myStatement.executeQuery("SELECT SUM(Pwaste) AS caught, SUM(totals) AS sold FROM fishdb.data_table WHERE species = 'Whiting' GROUP BY species");
            myRe.next();
            wSold = myRe.getInt("sold");
            wCaught = myRe.getInt("caught");
            myC.setWSold(wSold);
            myC.setWCaught(wCaught);
            ResultSet myRes = myStatement.executeQuery("SELECT SUM(Pwaste) AS caught, SUM(totals) AS sold FROM fishdb.data_table WHERE species = 'Pollock' GROUP BY species");
            myRes.next();
            pSold = myRes.getInt("sold");
            pCaught = myRes.getInt("caught");
            myC.setPSold(pSold);
            myC.setPCaught(pCaught);
        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
                
        myC.compute();
        String fact = myC.getFact();
        JOptionPane.showMessageDialog(null, fact);
        
    }                                     

    private void typeCBXActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void dateTFActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void soldTFActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void addFishBTNActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if(addBTN.isVisible() == false){
            typeLBL.setVisible(true);
            typeCBX.setVisible(true);
            dateLB.setVisible(true);
            soldLBL.setVisible(true);
            soldTF.setVisible(true);
            caughtLBL.setVisible(true);
            caughtTF.setVisible(true);
            addBTN.setVisible(true);
            dateLB.setVisible(true);
            dateTF.setVisible(true);
            searchBTN.setVisible(false);
            deleteBTN.setVisible(false);
        }
        else if(addBTN.isVisible() == true){
            typeLBL.setVisible(false);
            typeCBX.setVisible(false);
            dateLB.setVisible(false);
            soldLBL.setVisible(false);
            soldTF.setVisible(false);
            caughtLBL.setVisible(false);
            caughtTF.setVisible(false);
            addBTN.setVisible(false);
            dateLB.setVisible(false);
            dateTF.setVisible(false);
        }
        
    }                                          

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // Sending code to fish class and Log class
        Fish f = new Fish();
        Log l = new Log();
        f.setSpecies1(typeCBX.getSelectedItem().toString());
        f.setCaught1(Integer.parseInt(caughtTF.getText()));
        f.setSold1(Integer.parseInt(soldTF.getText()));
        f.setDate1(dateTF.getText());
        l.setSpecies1(typeCBX.getSelectedItem().toString());
        l.setCaught1(Integer.parseInt(caughtTF.getText()));
        l.setSold1(Integer.parseInt(soldTF.getText()));
        l.setDate1(dateTF.getText());
        logData.add(f);
        f.compute();
        l.computeL();
        
        caughtTF.setText("");
        soldTF.setText("");
        dateTF.setText("");
        typeCBX.setSelectedIndex(0);
        
        // making the textfields and buttons invisible again once data goes through
        typeLBL.setVisible(false);
        typeCBX.setVisible(false);
        soldLBL.setVisible(false);
        soldTF.setVisible(false);
        caughtLBL.setVisible(false);
        caughtTF.setVisible(false);
        addBTN.setVisible(false);
        dateLB.setVisible(false);
        dateTF.setVisible(false);
    }                                      

    private void returnBTNActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        HomeGUI myWaterGUI = new HomeGUI();
        myWaterGUI.setVisible(true);
        this.dispose();
    }                                         

    private void deleteFishBTNActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // display the need objects
        if(deleteBTN.isVisible() == false){
            deleteBTN.setVisible(true);
            typeLBL.setVisible(true);
            typeCBX.setVisible(true);
            dateTF.setVisible(true);
            dateLB.setVisible(true);
            addBTN.setVisible(false);
            searchBTN.setVisible(false);
            soldTF.setVisible(false);
            soldLBL.setVisible(false);
            caughtTF.setVisible(false);
            caughtLBL.setVisible(false);
        }
        else if(deleteBTN.isVisible() == true){
            deleteBTN.setVisible(false);
            typeLBL.setVisible(false);
            typeCBX.setVisible(false);
            dateTF.setVisible(false);
            dateLB.setVisible(false);
        }
    }                                             

    private void caughtTFActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void displayBTNActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // Display Log data from database
         if(logData.isEmpty()){
             JOptionPane.showMessageDialog(null, "No Logged Fishing Data");
         }
         else {
             for(int i = 0; i < logData.size(); i++){
                 Log e = logData.get(i);
                 JOptionPane.showMessageDialog(null, "Date: " + e.getDate() + "\nSpecies: " + e.getSpecies() + "\nCaught: " + e.getCaught() + "\nSold: " + e.getSold());
             }
         }
         
    }                                          

    private void searchFishBTNActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if(searchBTN.isVisible() == false){
            typeLBL.setVisible(false);
            typeCBX.setVisible(false);
            searchBTN.setVisible(true);
            dateLB.setVisible(true);
            dateTF.setVisible(true);
            soldLBL.setVisible(false);
            soldTF.setVisible(false);
            caughtLBL.setVisible(false);
            caughtTF.setVisible(false);
            addBTN.setVisible(false);
            deleteBTN.setVisible(false);
        }
        else if(searchBTN.isVisible() == true){
            typeLBL.setVisible(false);
            typeCBX.setVisible(false);
            searchBTN.setVisible(false);
            dateLB.setVisible(false);
            dateTF.setVisible(false); 
        }    
        
    }                                             

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        String searchTerm = dateTF.getText();
        try {
            Statement myStatement = myConn.createStatement();
            ResultSet mySet = myStatement.executeQuery("SELECT * FROM log_table WHERE date = '" + searchTerm + "'");
            
            while(mySet.next()){
                if(mySet.getString("date").equalsIgnoreCase(searchTerm)){
                    JOptionPane.showMessageDialog(null, "Date: " + mySet.getString("date") + "\nSpecies: " + mySet.getString("species") + "\nCaught: " + mySet.getString("caught") + "\nSold: " + mySet.getString("sold"));
                }
            }
            
            dateTF.setText("");
            
        }
        catch (SQLException e){
            System.out.println("Error: " + e);
        }
    }                                         

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // veiw delete inputs
        String term = dateTF.getText();
        String typeT = typeCBX.getSelectedItem().toString();
        try {
            Statement myStatement = myConn.createStatement();
            ResultSet myRS = myStatement.executeQuery("SELECT * FROM log_table WHERE date = '" + term + "' AND species = '" + typeT + "'");
            
            while(myRS.next()){
                
                myStatement.executeUpdate("DELETE FROM log_table WHERE date = '" + term + "' AND species = '" + typeT + "'");
                JOptionPane.showMessageDialog(null, "Item Deleted Successfully");
                   
                
            }
            
            dateTF.setText("");
            typeCBX.setSelectedIndex(0);
            
            dateTF.setVisible(false);
            dateLB.setVisible(false);
            typeLBL.setVisible(false);
            typeCBX.setVisible(false);
            searchBTN.setVisible(false);
            
        }
        catch (SQLException ex){
            System.out.println("Error: " + ex);
        }
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VeiwGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VeiwGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VeiwGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VeiwGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VeiwGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addBTN;
    private javax.swing.JButton addFishBTN;
    private javax.swing.JLabel bgLBL;
    private javax.swing.JLabel caughtLBL;
    private javax.swing.JTextField caughtTF;
    private javax.swing.JLabel coOrdLB;
    private javax.swing.JLabel dateLB;
    private javax.swing.JTextField dateTF;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JButton deleteFishBTN;
    private javax.swing.JButton displayBTN;
    private javax.swing.JTextField downTF;
    private javax.swing.JButton goBTN;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField overTF;
    private javax.swing.JButton returnBTN;
    private javax.swing.JButton searchBTN;
    private javax.swing.JButton searchFishBTN;
    private javax.swing.JLabel soldLBL;
    private javax.swing.JTextField soldTF;
    private javax.swing.JLabel titleLBL;
    private javax.swing.JComboBox<String> typeCBX;
    private javax.swing.JLabel typeLBL;
    // End of variables declaration                   
}
